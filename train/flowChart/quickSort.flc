read n;

1:
a := n;
stack := ();
goto 2.

2:
if _== a () then 20 else 3.

3:
x := ^hd a;
a := ^tl a;
b := ();
c := ();
d := ();
goto 4.

4:
if _== a () then 10 else 5.

5:
if _== x ^hd a then 6 else 7.

6:
c := _cons ^hd a c;
a := ^tl a;
goto 4.

7:
if _< x ^hd a then 9 else 8.

8:
b := _cons ^hd a b;
a := ^tl a;
goto 4.

9:
d := _cons ^hd a d;
a := ^tl a;
goto 4.

10:
a := b;
c := _cons x c;
stack := _cons 0 _cons d _cons c stack;
goto 2.

11:
stack := ^tl stack;
b := a;
a := ^hd stack;
stack := _cons 1 _cons b ^tl stack;
goto 2.

12:
stack := ^tl stack;
d := a;
b := ^hd stack;
stack := ^tl stack;
c := ^hd stack;
stack := ^tl stack;
rev := ();
goto 13.

13:
if _== c () then 15 else 14.

14:
d := _cons ^hd c d;
c := ^tl c;
goto 13.

15:
if _== b () then 17 else 16.

16:
rev := _cons ^hd b rev;
b := ^tl b;
goto 15.

17:
if _== rev () then 19 else 18.

18:
d := _cons ^hd rev d;
rev := ^tl rev;
goto 17.

19:
a := d;
goto 20.

20:
if _== stack () then 22 else 21. 

21:
if _== ^hd stack 0 then 11 else 12.

22:
return a.
